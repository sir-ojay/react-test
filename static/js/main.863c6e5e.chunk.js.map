{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","Components/ResidentsList.js","studentsList.js","Components/Search.js","Components/Error.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ResidentsList","resident","className","data-testid","length","eachResident","residentId","key","name","STUDENTS","validityDate","Search","setResident","setError","useState","date","input","setInput","onChange","target","value","htmlFor","type","onClick","isValidStudent","find","student","toLowerCase","joiningDate","now","Date","today","getFullYear","getMonth","getDate","split","year","month","day","yyyy","mm","dd","maxValid","checkValidity","error","App","header","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"4LAAA,IAAIA,EAAM,CACT,wBAAyB,CACxB,GACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,GACzBG,EAAOC,QAAUf,G,gGCJFgB,MAlBf,YAAoC,IAAZC,EAAW,EAAXA,SACvB,OACC,yBAAKC,UAAU,oBACd,yBAAKA,UAAU,gCAAf,kBACA,wBAAIA,UAAU,4BAA4BC,cAAY,qBAClC,IAAlBF,EAASG,OAAW,uCACrBH,EAASlB,KAAI,SAACsB,EAAaC,GAAd,OACb,wBAAIC,IAAKD,EAAYJ,UAAU,oBAC9BG,EAAaG,Y,sBCVLC,EAAW,CACpB,CACID,KAAM,OACNE,aAAc,cAElB,CACIF,KAAM,OACNE,aAAc,cAElB,CACIF,KAAM,OACNE,aAAc,cAElB,CACIF,KAAM,SACNE,aAAc,cAElB,CACIF,KAAM,SACNE,aAAc,cAElB,CACIF,KAAM,SACNE,aAAc,cAElB,CACIF,KAAM,UACNE,aAAc,cAElB,CACIF,KAAM,SACNE,aAAc,eCqEPC,MAtFf,YAA4C,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAAY,EACfC,mBAAS,CACjCN,KAAM,GACNO,KAAM,KAHiC,mBAClCC,EADkC,KAC3BC,EAD2B,KAwCnCC,EAAW,SAAC3B,GAChB0B,EAAS,2BAAKD,GAAN,kBAAczB,EAAE4B,OAAOX,KAAOjB,EAAE4B,OAAOC,UAGjD,OACE,yBAAKlB,UAAU,wDACb,2BAAOmB,QAAQ,eAAf,gBAEE,6BACE,2BACEb,KAAK,OACLb,GAAG,cACHyB,MAAOJ,EAAMR,KACbU,SAAUA,EACVf,cAAY,cACZmB,KAAK,OACLpB,UAAU,kBAIhB,2BAAOmB,QAAQ,eAAf,gBAEE,6BACE,2BACEb,KAAK,OACLb,GAAG,cACHyB,MAAOJ,EAAMD,KACbG,SAAUA,EACVf,cAAY,cACZmB,KAAK,OACLpB,UAAU,kBAIhB,4BACEoB,KAAK,SACLnB,cAAY,SACZD,UAAU,aACVqB,QAzEa,WACjB,GAAKP,EAAMR,MAASQ,EAAMD,KAA1B,CAKA,IAAMS,EAAiBf,EAASgB,MAAK,SAACC,GACpC,OAAOA,EAAQlB,KAAKmB,gBAAkBX,EAAMR,KAAKmB,iBAGnD,GAAKH,GAzBY,SAACI,EAAalB,GACjC,IAAMmB,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAAKD,EAAIG,cAAeH,EAAII,WAAYJ,EAAIK,WAFb,EAGtBN,EAAYO,MAAM,KAHI,mBAG1CC,EAH0C,KAGpCC,EAHoC,KAG7BC,EAH6B,OAI1B5B,EAAayB,MAAM,KAJO,mBAI1CI,EAJ0C,KAIpCC,EAJoC,KAIhCC,EAJgC,KAK3CC,EAAW,IAAIZ,KAAKS,EAAMC,EAAK,EAAGC,GAExC,OAAOC,GADU,IAAIZ,KAAKM,EAAMC,EAAQ,EAAGC,IACZI,GAAYX,GAuBvBY,CAAc3B,EAAMD,KAAMS,EAAed,eAM3DE,GAAY,SAACX,GAIX,OAHoBA,EAASwB,MAAK,SAACpB,GACjC,OAAOA,EAAaG,KAAKmB,gBAAkBX,EAAMR,KAAKmB,iBAEhC1B,EAElB,GAAN,mBAAWA,GAAX,CAAqBe,OAEvBC,EAAS,CACPT,KAAM,GACNO,KAAM,KAERF,EAAS,KAhBPA,EAAS,UAAD,OAAWG,EAAMR,KAAjB,kCANRK,EAAS,UAAD,OAAWG,EAAMR,KAAjB,qCATRK,EAAS,8BAmET,SC1ESrB,MAZf,YAAyB,IAAToD,EAAQ,EAARA,MACf,OAAO,6BAENA,EACD,yBAAKzC,cAAY,WAAWD,UAAU,sCAAsC0C,GAE5E,K,MCgBcC,MAhBf,WAAgB,IAAD,EACmB/B,mBAAS,IAD5B,mBACNb,EADM,KACIW,EADJ,OAEaE,mBAAS,IAFtB,mBAEN8B,EAFM,KAEC/B,EAFD,KAIb,OACE,yBAAKX,UAAU,OACX,gCAAY4C,OAPN,WAQR,yBAAK5C,UAAU,wEACb,kBAAC,EAAD,CAAQU,YAAaA,EAAaC,SAAUA,IAC5C,kBAAC,EAAD,CAAO+B,MAAOA,IACd,kBAAC,EAAD,CAAe3C,SAAUA,OCR3B8C,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACThE,MAAK,SAAAoE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAvB,GACLqB,QAAQrB,MAAM,4CAA6CA,M,WCxEjEwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,cAAwBxB,OAAOC,UAC3CwB,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMmB,cAAN,sBAEP1B,IAiDV,SAAiCO,GAE/BsB,MAAMtB,GACHhE,MAAK,SAAAuF,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C1B,UAAUC,cAAc0B,MAAM5F,MAAK,SAAAoE,GACjCA,EAAayB,aAAa7F,MAAK,WAC7B2D,OAAOC,SAASkC,eAKpB/B,EAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEArEAmB,CAAwB/B,GAIxBC,UAAUC,cAAc0B,MAAM5F,MAAK,WACjC2E,QAAQC,IACN,gHAMJb,EAAgBC,OCxCxBgC,GACAC,cACKjG,MAAK,WACF,OAAOkG,YAAqBvC,a","file":"static/js/main.863c6e5e.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t23,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 18;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\n\r\nfunction ResidentsList({resident}) {\r\n\treturn (\r\n\t\t<div className=\"pa-10 mt-10 w-75\">\r\n\t\t\t<div className=\"font-weight-bold text-center\">Residents List</div>\r\n\t\t\t<ul className=\"mt-10 styled w-50 mx-auto\" data-testid=\"residentsNameList\">\r\n\t\t\t\t{resident.length===0?<li>No data</li>: \r\n\t\t\t\tresident.map((eachResident,residentId)=>\r\n\t\t\t\t<li key={residentId} className=\"slide-up-fade-in\">\r\n\t\t\t\t{eachResident.name}\r\n\t\t\t</li>)\r\n\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResidentsList;\r\n","export const STUDENTS = [\r\n    {\r\n        name: 'John',\r\n        validityDate: '2030-12-30'\r\n    },\r\n    {\r\n        name: 'Jane',\r\n        validityDate: '2030-05-25'\r\n    },\r\n    {\r\n        name: 'Adam',\r\n        validityDate: '2030-11-11'\r\n    },\r\n    {\r\n        name: 'Bonnie',\r\n        validityDate: '2008-11-11'\r\n    },\r\n    {\r\n        name: 'Dhilip',\r\n        validityDate: '2030-12-30'\r\n    },\r\n    {\r\n        name: 'Falude',\r\n        validityDate: '2020-05-25'\r\n    },\r\n    {\r\n        name: 'Damiyen',\r\n        validityDate: '2030-11-11'\r\n    },\r\n    {\r\n        name: 'Talisk',\r\n        validityDate: '2023-11-11'\r\n    }\r\n];","import React, { useState } from \"react\";\r\nimport { STUDENTS } from \"../studentsList\";\r\n// `joiningDate` && `validityDate` format \"yyyy-mm-dd\"\r\n\r\nconst  checkValidity=(joiningDate, validityDate)=> {\r\n  const now = new Date();\r\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n  const [year, month, day] = joiningDate.split(\"-\");\r\n  const [yyyy, mm, dd] = validityDate.split(\"-\");\r\n  const maxValid = new Date(yyyy, mm - 1, dd);\r\n  const selected = new Date(year, month - 1, day);\r\n  return maxValid >= selected && maxValid >= today;\r\n}\r\n\r\nfunction Search({ setResident, setError }) {\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    date: \"\",\r\n  });\r\n  const updateList = () => {\r\n    if (!input.name || !input.date) {\r\n      setError(\"please fill in all input\");\r\n      return;\r\n    }\r\n\r\n    const isValidStudent = STUDENTS.find((student) => {\r\n      return student.name.toLowerCase() === input.name.toLowerCase();\r\n    });\r\n     \r\n    if (!isValidStudent) {\r\n      setError(`Sorry, ${input.name} is not a verified student!`);\r\n      return;\r\n    }\r\n\r\n    const validDate = checkValidity(input.date, isValidStudent.validityDate);\r\n    if (!validDate) {\r\n      setError(`Sorry, ${input.name}'s validity has Expired!`);\r\n      return;\r\n    }\r\n\r\n    setResident((resident) => {\r\n      const isUserAdded = resident.find((eachResident) => {\r\n        return eachResident.name.toLowerCase() === input.name.toLowerCase();\r\n      });\r\n      if (isUserAdded) return resident;\r\n\r\n      return [...resident, input];\r\n    });\r\n    setInput({\r\n      name: \"\",\r\n      date: \"\",\r\n    });\r\n    setError(\"\");\r\n  };\r\n  const onChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-50 layout-row align-items-end justify-content-end\">\r\n      <label htmlFor=\"studentName\">\r\n        Student Name:\r\n        <div>\r\n          <input\r\n            name=\"name\"\r\n            id=\"studentName\"\r\n            value={input.name}\r\n            onChange={onChange}\r\n            data-testid=\"studentName\"\r\n            type=\"text\"\r\n            className=\"mr-30 mt-10\"\r\n          />\r\n        </div>\r\n      </label>\r\n      <label htmlFor=\"joiningDate\">\r\n        Joining Date:\r\n        <div>\r\n          <input\r\n            name=\"date\"\r\n            id=\"joiningDate\"\r\n            value={input.date}\r\n            onChange={onChange}\r\n            data-testid=\"joiningDate\"\r\n            type=\"date\"\r\n            className=\"mr-30 mt-10\"\r\n          />\r\n        </div>\r\n      </label>\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"addBtn\"\r\n        className=\"small mb-0\"\r\n        onClick={updateList}\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nfunction Error({error}) {\r\n\treturn <div>\r\n\r\n{ error?\r\n\t<div data-testid=\"errorMsg\" className=\"alert error mt-20 slide-up-fade-in\">{error}</div>\r\n\t:\r\n\t\"\"\r\n}\r\n\t</div>\r\n\t\r\n}\r\n// \r\nexport default Error;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport ResidentsList from './Components/ResidentsList';\r\nimport Search from './Components/Search';\r\nimport Error from './Components/Error';\r\nimport 'h8k-components';\r\n\r\nconst title = \"Tizeti\";\r\nfunction App() {\r\n  const [resident, setResident] = useState([])\r\n  const [error, setError] = useState(\"\")\r\n \r\n  return (\r\n    <div className=\"App\">\r\n        <h8k-navbar header={title} ></h8k-navbar>\r\n      <div className=\"layout-column justify-content-center align-items-center w-50 mx-auto\">\r\n        <Search setResident={setResident} setError={setError}/>\r\n        <Error error={error}/>\r\n        <ResidentsList resident={resident}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\napplyPolyfills()\r\n    .then(() => {\r\n        return defineCustomElements(window);\r\n    })\r\n"],"sourceRoot":""}